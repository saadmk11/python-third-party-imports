name: Release

on:
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.sha }}
  cancel-in-progress: true

jobs:
  build:
    name: Build on ${{ matrix.platform.os }} for ${{ matrix.platform.target }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            target: x86_64
          - os: ubuntu-latest
            target: i686
          - os: ubuntu-latest
            target: aarch64
          - os: macos-latest
            target: x86_64
            args: --sdist
          - os: windows-latest
            target: x86_64
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
            toolchain: stable

      - uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          manylinux: auto
          args: -b bin --release --out dist ${{ matrix.platform.args || '' }}

      - uses: actions/setup-python@v4
        with:
          python-version: "3.7"

      - name: Install built wheel on ${{ matrix.platform.target }}
        if: matrix.platform.target != 'i686' && matrix.platform.target != 'aarch64'
        shell: bash
        run: python -m pip install dist/third_party_imports-*.whl --force-reinstall
      
      - uses: uraimo/run-on-arch-action@v2.0.5
        if: matrix.platform.target == 'aarch64'
        name: Install built wheel on ${{ matrix.platform.target }}
        with:
          arch: ${{ matrix.platform.target }}
          distro: ubuntu20.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-pip
            pip3 install -U pip
          run: |
            python3 -m pip install third-party-imports --no-index --find-links dist/ --force-reinstall

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - uses: actions/setup-python@v4
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *
